% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/catchdatasourcesplot.R
\name{catchdatasourcesplot}
\alias{catchdatasourcesplot}
\title{Catch reconstruction data sources plot}
\usage{
catchdatasourcesplot(
  data,
  ylab = "",
  xlab = "",
  legend_position = "none",
  colours = NULL,
  text_size = 12,
  xangle = NULL,
  financial_year = FALSE
)
}
\arguments{
\item{data}{No prep function provided, see example. A data frame with sector (factor), source (chr), startyr (num), endyr (num), col (a colour category, chr), label (a label category, num)}

\item{ylab}{Label for y-axis (character). Default is "".}

\item{xlab}{Label for x-axis (character). Default is "".}

\item{legend_position}{Position of the legend ("none", "left", "right", "bottom", "top", or two-element numeric vector for x and y position). Default is "none".}

\item{colours}{A vector of colours used (character). Default is c("#FFC000","#9D9D9D","#FFE699").}

\item{text_size}{Text size (num). Default is 12.}

\item{xangle}{Set to 90 to rotate x-axis labels 90 degrees.}

\item{financial_year}{Set to TRUE if the assessment was based on financial year (logical). Adjusts the x-axis to show full financial year notation.}
}
\value{
Catch reconstruction data sources plot
}
\description{
There is no prep function to assist with the production of this plot. Instead, look at the example provided to create a suitable data frame for your assessment.
\itemize{
\item Note that the endyr of one source and startyr of the next should be the same to avoid gaps.
\item col 'A' represents interpolated data, like between SRFS data points
\item col 'B' represents data sources
\item col 'C' represents extrabolated data, like hindcasts or forecasts
\item label '1' represents regular, large text
\item label '2' represents large text, rotated 90 degrees
\item label '4' represents small text, rotated 90 degrees
\item label '0' represents text that you've decided you don't want to appear; works the same as listing '' in the source column
}
}
\examples{
data <- data.frame(c('Queensland commercial'  , 'Hindcast (linear)', 1958, 1989, 'C', 1),
                   c('Queensland commercial'  , 'Logbook records'  , 1989, 2021, 'B', 1),
                   c('Queensland charter'     , 'Hindcast (linear)', 1958, 1995, 'C', 1),
                   c('Queensland charter'     , 'Logbook records'  , 1995, 2021, 'B', 1),
                   c('Queensland recreational', 'Hindcast'         , 1958, 2001, 'C', 1),
                   c('Queensland recreational', 'NRIFS'            , 2001, 2002, 'B', 4),
                   c('Queensland recreational', 'RFish'            , 2002, 2003, 'B', 4),
                   c('Queensland recreational', 'Estimated'        , 2003, 2005, 'A', 0),
                   c('Queensland recreational', 'RFish'            , 2005, 2006, 'B', 4),
                   c('Queensland recreational', 'Estimated'        , 2006, 2011, 'A', 2),
                   c('Queensland recreational', 'SRFS'             , 2011, 2012, 'B', 4),
                   c('Queensland recreational', 'Estimated'        , 2012, 2014, 'A', 0),
                   c('Queensland recreational', 'SRFS'             , 2014, 2015, 'B', 4),
                   c('Queensland recreational', 'Estimated'        , 2015, 2020, 'A', 0),
                   c('Queensland recreational', 'SRFS'             , 2020, 2021, 'B', 4),
                   c('Queensland recreational', 'Estimated'        , 2021, 2021, 'B', 0),
                   c('Queensland Indigenous'  , 'Equal to NRIFS'   , 1958, 2001, 'C', 1),
                   c('Queensland Indigenous'  , 'NRIFS'            , 2001, 2002, 'B', 4),
                   c('Queensland Indigenous'  , 'Equal to NRIFS'   , 2002, 2021, 'C', 1)) |>
  t() |>
  `rownames<-`(NULL) |>
  `colnames<-`(c("sector","source","startyr","endyr","col","label")) |>
  as.data.frame() |>
  dplyr::mutate(startyr = as.numeric(startyr), endyr = as.numeric(endyr)) |>
  dplyr::mutate(sector = as.factor(sector))

  data$sector <- factor(data$sector, levels = c('Queensland Indigenous',
                                                'Queensland recreational',
                                                'Queensland charter',
                                                'Queensland commercial'))
catchdatasourcesplot(data)
catchdatasourcesplot(data, financial_year=TRUE)
}
