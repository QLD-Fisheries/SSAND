% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sensitivityplot.R
\name{sensitivityplot}
\alias{sensitivityplot}
\title{Sensitivity plot}
\usage{
sensitivityplot(
  data,
  parameters = NULL,
  colours = NULL,
  parameter_labels = NULL,
  scenarios = NULL,
  scenario_labels = NULL,
  scenario_order = NULL,
  ncol = 2,
  scales = "free",
  show_x_labels = FALSE,
  xangle = NULL,
  xlab = "Scenario",
  ylab = ""
)
}
\arguments{
\item{data}{Output from sensitivityplot_prep(). Data frame with scenario (int), name (chr), value (num), ub (num), lb (num), fixed (log).}

\item{parameters}{A vector of parameters to include on plot (character). This was already specified in prep file, but this is a manual override to save running the prep function again.}

\item{colours}{A vector of colours used (character).}

\item{parameter_labels}{A vector of customised facet labels for different parameters (character).}

\item{scenarios}{A vector of scenario numbers to be shown on plot (numeric). This was already specified in prep file, but this is a manual override to save running the prep function again.}

\item{scenario_labels}{A vector of customised scenario names (character). Default is "Scenario 1", "Scenario 2", etc.}

\item{scenario_order}{A vector to reorder how scenarios are displayed (character). Use the label names defined in "scenario_labels".
If "scenario_labels" is left blank, the labels will be "Scenario 1", "Scenario 2" etc.
Any scenarios not included in "scenario_order" will be tacked on in the order they appear in the input data.}

\item{ncol}{Number of columns for facet_wrap(). Default is 2.}

\item{scales}{Scales for ggplot2::facet_wrap(). Default is 'free', see ?ggplot2::facet_wrap for options.}

\item{show_x_labels}{Set to TRUE to include scenario names on the x-axis (logical).}

\item{xangle}{Set to 90 to rotate x-axis labels 90 degrees.}

\item{xlab}{Label for x-axis (character). Default is "Scenario".}

\item{ylab}{Label for y-axis (character). Default is "".}
}
\value{
This function produces comparison plot of parameter estimates across all scenarios.
}
\description{
Sensitivity plot
}
\examples{
parm <- extract_SS_parameters(ss_mle)[c(3:6),]
data <- sensitivityplot_prep_SS(ss_mle,
                                ss_mcmc,
                                show_MSY = TRUE,
                                show_LL = TRUE,
                                show_B_ratio = TRUE,
                                parameters = parm)
sensitivityplot(data)

data <- sensitivityplot_prep_DD(dd_mle)
sensitivityplot(data)
}
